name: Nx Monorepo CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js with npm caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # 3️⃣ Cache dependencies + Nx cache
      - name: Cache dependencies and Nx cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .nx/cache
            ~/.npm          # cache global npm installs (for Nx)
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      # 4️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # 5️⃣ Install Nx globally (only once per runner, cached in ~/.npm)
      - name: Install Nx globally
        run: npm install -g nx@latest

      # 6️⃣ Run affected builds
      - name: Run affected builds
        run: nx affected --target=build --parallel --max-parallel=3

      # 7️⃣ Upload build artifacts (optional)
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: nx-build-output
          path: |
            dist/apps/**
            dist/libs/**
